* {
    padding: 0;
    margin: 0;
}

#main{
    width: 100%;
    height: 600px; 
    background-color: #eee;
    /* border: 4px solid black; */
    text-align: center;
}
.page{
    position: relative;
    display: inline-block;

    width: 1024px;
    height: 100%;
    background-color: #ddd;

    text-align: left;
}
.wrapper .ract1{
    width: 100px;
    height: 100px;
    background-color: brown;
    text-align: center;

    

    /* 使元素隐藏，但仍占用空间 */
    /* visibility: hidden; */
    /* 隐藏，但不占空间 */
    /* display: none; */
    /* 行级元素 */
    /* display: inline; */

}
.wrapper .ract2{
    width: 100px;
    height: 100px;
    background-color: blue;
    text-align: center;

    /* position: static 
    这是html的默认值，即没有定位，元素出现在正常的流中，
    不会受到 top, bottom, left, right影响。
    */
    /* position: fixed; 
    元素的位置相对于浏览器窗口是固定位置。
    即使窗口是滚动的它也不会移动：
    */
    /* position: relative; 
    相对定位。移动它不影响旁边。
    相对定位元素经常被用来作为绝对定位元素的容器块。
    */
    /* position: absolute; 
    绝对定位。移动它会影响旁边，让位。
    位置相对于最近的已定位父元素
    使元素的位置与文档流无关，因此不占据空间
    定位的元素和其他元素重叠
    */
    /* position: sticky;一般不用 */

    /* position: relative;
    z-index: 100; 
    元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素
    z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）
    一个元素可以有正数或负数的堆叠顺序：
    具有更高堆叠顺序的元素总是在较低的堆叠顺序元素的前面。
     如果两个定位元素重叠，没有指定z - index，最后定位在HTML代码中的元素将被显示在最前面。
    */


}
.wrapper .content{
    font-size: 18px;
    color: aliceblue;
    line-height: 100px;
}